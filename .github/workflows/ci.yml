name: CI

on:
  workflow_call:
    inputs:
      lint_cmd:
        required: true
        type: string
      test_cmd:
        required: true
        type: string
    secrets:
      gcp_service_account:
        required: true
      npm_token:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate build variables
        id: vars
        run: |
          echo "::set-output name=tag::$GITHUB_REF_NAME-$(echo $GITHUB_SHA | cut -c 1-8)"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.gcp_service_account }}
          project_id: tensorleap-admin-3
      - name: Configure docker
        run: |-
          gcloud --quiet auth configure-docker
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          tags: gcr.io/${{ github.repository }}:${{steps.vars.outputs.tag}}
          build-args: |
            NPM_TOKEN=${{ secrets.npm_token }}
          labels: |
            commit=${{ github.sha }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate build variables
        id: vars
        run: |
          echo "::set-output name=tag::$GITHUB_REF_NAME-$(echo $GITHUB_SHA | cut -c 1-8)"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.gcp_service_account }}
          project_id: tensorleap-admin-3
      - name: Configure docker
        run: |-
          gcloud --quiet auth configure-docker
      - name: Run lint
        env:
          TAG: ${{ steps.vars.outputs.tag }}
          CMD: ${{ inputs.lint_cmd }}
        run: |
          docker run -e CI=true gcr.io/$GITHUB_REPOSITORY:$TAG $CMD

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate build variables
        id: vars
        run: |
          echo "::set-output name=tag::$GITHUB_REF_NAME-$(echo $GITHUB_SHA | cut -c 1-8)"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.gcp_service_account }}
          project_id: tensorleap-admin-3
          export_default_credentials: true
      - name: Configure docker
        run: |-
          gcloud --quiet auth configure-docker
      - name: Run test
        env:
          TAG: ${{ steps.vars.outputs.tag }}
          CMD: ${{ inputs.test_cmd }}
          AUTH_SECRET: ${{ secrets.gcp_service_account }}
        run: |
          docker run \
            --name ${{ github.sha }} \
            -v $GOOGLE_APPLICATION_CREDENTIALS:$GOOGLE_APPLICATION_CREDENTIALS \
            -e GOOGLE_APPLICATION_CREDENTIALS \
            -e CI=true \
            -e AUTH_SECRET \
            gcr.io/$GITHUB_REPOSITORY:$TAG \
            $CMD
      - name: Copy diff image files
        if: failure()
        run: |
          mkdir -p ${{ github.workspace }}/__image_snapshots__/__diff_output__/
          docker cp ${{ github.sha }}:/app/__image_snapshots__/__diff_output__/ ${{ github.workspace }}/__image_snapshots__/__diff_output__/
      - name: Upload diff image files
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: diff_output
          path: ${{ github.workspace }}/__image_snapshots__/__diff_output__/*
          if-no-files-found: error

  mark-stable:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Generate build variables
        id: vars
        run: |
          echo "::set-output name=tag::$GITHUB_REF_NAME-$(echo $GITHUB_SHA | cut -c 1-8)"
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.gcp_service_account }}
          project_id: tensorleap-admin-3
      - name: Set stable tag
        env:
          TAG: ${{ steps.vars.outputs.tag }}
        run: |
          gcloud container images add-tag gcr.io/$GITHUB_REPOSITORY:$TAG gcr.io/$GITHUB_REPOSITORY:$TAG-stable gcr.io/$GITHUB_REPOSITORY:latest
